def lokesh(listt):
    res = defaultdict(list) # This creates a default dictionary that is a dictionary + a collection module, which before, when you append a value into a non exsisting key, there will be a key error, but in collection mode, there will be a defualt factory value created for you, which generated by the default factory function, in this example, When the list class is passed as the default_factory argument, then a defaultdict is created with the values that are list. 
    for s in strs:
        count = [0] * 26
        for c in s:
            count[ord(c) - ord("a")] += 1 #This ord is for translate ASCII to numeric
        res[tuple(count)].append(s) # In python, list cannot be keys, so we change it to a tuple, that is immutable, which is saying the elements cannot change in that tuple.
    return res.values() #We just want the values, no key needed
listt=["eat","tea","tan","ate","nat","bat"]
result=lokesh(listt)
print(result)
